#-----------------------------------------------------------------------------
# Name:      logging.properties
# Project:   xmlBlaster.org
# Copyright: xmlBlaster.org, see xmlBlaster-LICENSE file
#
# adapted for the Ethercis project
#
# Comment:   Configure java.common.logging response (since JDK 1.4)
#
# Levels:    FINEST
#            FINER
#            FINE
#            INFO
#            WARNING
#            SEVERE
#            CONFIG
#
# Force the logging property file:
#  java -Djava.common.logging.config.file=${ETC_PATH}/logging.properties ...
#
# Configure logging from command line:
#  -logging FINE
#  -/node/ethercis_1/logging FINE
#  -logging/com.ethercis.dao FINE
#  -/node/ethercis_1/logging/com.ethercis.dao FINE

#->Main::main()->LogManager.readConfiguration(Input)

# We provide an own formatter which logs on one line (not two as java default) and uses colors on UNIX:
#  java.common.logging.FileHandler.formatter =com.ethercis.servicemanager.common.log.SoaLogFormatter
# Example: Starting with ISO 8601 timestamp of local time (see SoaLogFormatter.java how to configure GMT time)
#  2007-10-23 12:43:46.258  INFO   10-main RL0EhrServer.SessionTimer com.ethercis.logonservice.session.SessionManager resetSessionInfo: Disconnecting client /node/ehrserver/client/guest/-1, instanceId=-1
#  <date>     <time>      <level> <thread> <RL> <category>                  <codeLocation> bla bla bla

# Added colors (UNIX) can be suppressed by java -Dehrserver/supressXtermColors=true ...
#-----------------------------------------------------------------------------

# "handlers" specifies a comma separated list of log Handler
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
handlers= java.util.logging.ConsoleHandler,java.util.logging.FileHandler, com.ethercis.servicemanager.common.log.SoaNotifyHandler

# To also add the FileHandler, use the following line instead.
#handlers= java.common.logging.FileHandler, java.common.logging.ConsoleHandler

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
.level = INFO

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################

# Here count=1 backup files with max size 1M are created
# default file response is in user's home directory (%h).
# "%t"   the system temporary directory
# "%h"   the value of the "user.home" system property
# "%g"   the generation number to distinguish rotated logs
# "%u"   a unique number to resolve conflicts
java.util.logging.FileHandler.pattern = /var/opt/ecis/ehrserver%u%g.log
java.util.logging.FileHandler.limit = 1000000
java.util.logging.FileHandler.count = 10
java.util.logging.FileHandler.level = FINER

#java.common.logging.FileHandler.formatter = java.common.logging.SimpleFormatter
java.util.logging.FileHandler.formatter = com.ethercis.servicemanager.common.log.SoaLogFormatter

# Limit the message that are printed on the console to INFO and above.
java.util.logging.ConsoleHandler.level = FINER
#java.common.logging.ConsoleHandler.formatter = java.common.logging.SimpleFormatter
java.util.logging.ConsoleHandler.formatter = com.ethercis.servicemanager.common.log.SoaLogFormatter


############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################

# For example, set the com.xyz.foo logger to only log SEVERE
com.ethercis.servicemanager.cluster.RunTimeSingleton = FINER

